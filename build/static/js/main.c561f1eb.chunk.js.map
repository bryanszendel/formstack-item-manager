{"version":3,"sources":["store/reducers/itemReducer.js","store/reducers/index.js","store/actions/actionTypes.js","store/store.js","data/data.js","components/ItemList.js","components/ItemForm.js","store/actions/itemActions.js","components/ItemListContainer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","isLoading","error","combineReducers","itemReducer","state","action","type","payload","map","item","id","selected","console","log","param","sortedItems","sort","a","b","toLowerCase","today","Date","formatted","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","ids","idValue","reduce","Math","max","name","created_at","filter","store","createStore","reducer","applyMiddleware","thunk","data","ItemList","props","List","celled","verticalAlign","Item","key","onClick","setSelected","className","style","position","Content","height","display","alignItems","flexDirection","Header","fontSize","paddingRight","right","top","bottom","Button","deleteItem","icon","circular","Description","connect","addItem","dispatch","sortItems","useState","setItem","itemPlaceholder","setItemPlaceholder","options","text","value","Form","onSubmit","Input","fluid","iconPosition","size","placeholder","onChange","event","target","Dropdown","width","button","basic","getItems","useEffect","Container","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c561f1eb.chunk.js","sourcesContent":["import {\n  GET_ITEMS_START,\n  GET_ITEMS_SUCCESS,\n  SORT_ITEMS_START,\n  SORT_ITEMS_SUCCESS,\n  SET_SELECTED,\n  ADD_ITEM,\n  DELETE_ITEM,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  items: [],\n  isLoading: false,\n  error: ''\n}\n\nexport const itemReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ITEMS_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: ''\n      };\n    case GET_ITEMS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        items: action.payload,\n        error: ''\n      };\n\n    case SET_SELECTED:\n      return {\n        ...state,\n        items: state.items.map(item => {\n          if (item.id === action.payload) {\n            return {\n              ...item,\n              selected: !item.selected\n            } \n          } else {\n            return item\n          }\n        })\n      }\n      \n    case SORT_ITEMS_START:\n      return {\n        ...state,\n        isLoading: true\n      }\n\n    case SORT_ITEMS_SUCCESS:\n      console.log('sort payload', action.payload)\n      const param = action.payload\n      let sortedItems = []\n      if (param === 'id' || param === 'created_at') {\n        sortedItems = state.items.sort((a,b) => {\n          return a['id'] - b['id']\n        })\n      } else if (param === 'created_atZ') {\n        sortedItems = state.items.sort((a,b) => {\n          return b['id'] - a['id']\n        })\n      } else if (param === 'nameZ') {\n        sortedItems = state.items.sort((a,b) => {\n          if (a['name'].toLowerCase() < b['name'].toLowerCase()) return 1\n          else if (a['name'].toLowerCase() > b['name'].toLowerCase()) return -1\n          return 0\n        })\n      } else {\n        sortedItems = state.items.sort((a,b) => {\n          if (a[param].toLowerCase() < b[param].toLowerCase()) return -1\n          else if (a[param].toLowerCase() > b[param].toLowerCase()) return 1\n          return 0\n        }) \n      }\n      \n      return {\n        ...state,\n        items: sortedItems,\n        isLoading: false\n      }\n\n    case ADD_ITEM:\n      const today = new Date()\n      const formatted = `${today.getMonth() + 1}-${today.getDate()}-${today.getFullYear()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}`\n      let ids = state.items[0] ? state.items.map(item => {\n        return item.id\n      }) : [1]\n      let idValue = ids.reduce((a,b) => {\n        return Math.max(a,b) + 1 \n      })\n      return {\n        ...state,\n        items: [...state.items, {\n          id: idValue, \n          name: action.payload, \n          selected: false, \n          created_at: formatted\n        }],\n      };\n\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter(item => item.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport { itemReducer } from './itemReducer.js';\n\nexport default combineReducers({\n  itemReducer\n});","// ITEM ACTION TYPES\nexport const GET_ITEMS_START = 'GET_ITEMS_START';\nexport const GET_ITEMS_SUCCESS = 'GET_ITEMS_SUCCESS';\nexport const SORT_ITEMS_START = 'SORT_ITEMS_START';\nexport const SORT_ITEMS_SUCCESS = 'SORT_ITEMS_SUCCESS';\nexport const SET_SELECTED = 'SET_SELECTED';\n\nexport const ADD_ITEM = 'ADD_ITEM';\n\nexport const DELETE_ITEM = 'DELETE_ITEM';","import { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;","const today = new Date()\nconst formatted = `${today.getMonth() + 1}-${today.getDate()}-${today.getFullYear()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}`\nconst data = [\n  {\n    id: 1, \n    name: 'Setup React app using create-react-app',\n    selected: false,\n    created_at: formatted,\n  },\n  {\n    id: 2, \n    name: 'Install Redux using react-redux',\n    selected: false,\n    created_at: formatted\n  },\n  {\n    id: 3, \n    name: 'Setup reducers and actions',\n    selected: false,\n    created_at: formatted\n  },\n  {\n    id: 4, \n    name: 'Connect actions to container components',\n    selected: false,\n    created_at: formatted\n  },\n  {\n    id: 5, \n    name: 'Pass action props to presentational components',\n    selected: false,\n    created_at: formatted\n  },\n  {\n    id: 6, \n    name: 'Add some styles using SemanticUI React',\n    selected: false,\n    created_at: formatted\n  },\n\n  \n]\n\nexport default data;","import React from 'react';\nimport { List, Button } from 'semantic-ui-react'\n\nconst ItemList = (props) => {\n\treturn (\n\t\t<List celled verticalAlign=\"middle\">\n\t\t\t{props.items ? props.items.map(item => {\n\t\t\t\treturn (\n\t\t\t\t\t// <div \n\t\t\t\t\t// \tonClick={() => props.setSelected(item.id)} \n\t\t\t\t\t// \tkey={item.id} \n\t\t\t\t\t// \tclassName={`${!item.selected ? 'items' : 'items-selected'}`}\n\t\t\t\t\t// >\n\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\tonClick={() => props.setSelected(item.id)}\n\t\t\t\t\t\t\tclassName={`${!item.selected ? 'items' : 'items-selected'}`}\n\t\t\t\t\t\t\tstyle={{position: 'relative'}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<List.Content style={{height: '100%', display: 'flex', alignItems: 'center', flexDirection: 'row' }}>\n\t\t\t\t\t\t\t\t<List.Header style={{ fontSize: 20, paddingRight: 10}}>{item.name}</List.Header>\n\t\t\t\t\t\t\t\t{item.selected ? <div style={{position: 'absolute', right: '5px', top: '5px', bottom: '5px'}}>\n\t\t\t\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\t\t\t\tonClick={() => props.deleteItem(item.id)}\n\t\t\t\t\t\t\t\t\t\ticon=\"delete\"\n\t\t\t\t\t\t\t\t\t\t// color=\"black\"\n\t\t\t\t\t\t\t\t\t\tcircular={true}\n\t\t\t\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t\t\t</div> : null}\n\t\t\t\t\t\t\t\t{item.created_at ? \n\t\t\t\t\t\t\t\t<List.Description >\n\t\t\t\t\t\t\t\t\tcreated: {item.created_at}\n\t\t\t\t\t\t\t\t</List.Description> : null}\n\t\t\t\t\t\t\t</List.Content>\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t// </div>\n\t\t\t\t)\n\t\t\t}) : null}\n\t\t</List>\n\t)\n}\n\nexport default ItemList;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addItem, sortItems } from '../store/actions';\nimport { Form, Input, Dropdown } from 'semantic-ui-react'\n\nconst ItemForm = (props) => {\n\n  const [item, setItem] = useState('')\n  const [itemPlaceholder, setItemPlaceholder] = useState('-Sort-')\n\n  const handleChange = (event) => {\n    setItem(event.target.value)\n  }\n\n  const handleSubmit = () => {\n    props.addItem(item)\n    setItem('')\n  }\n\n  const options = [\n    { \n      key: 'none', \n      text: 'None', \n      value: 'none',\n      onClick: () => {\n        props.sortItems('id') \n        setItemPlaceholder('-Sort-')\n      }\n    },\n    { \n      key: 'id', \n      text: 'ID', \n      value: 'id', \n      onClick: () => {\n        props.sortItems('id') \n        setItemPlaceholder('ID')\n      } \n    },\n    { \n      key: 'created', \n      text: 'Created (earlier)', \n      value: 'created_at', \n      onClick: () => {\n        props.sortItems('created_at')\n        setItemPlaceholder('Created (earlier)')\n      } \n    },\n    { \n      key: 'createdZ', \n      text: 'Created (later)', \n      value: 'created_atZ', \n      onClick: () => {\n        props.sortItems('created_atZ')\n        setItemPlaceholder('Created (later)')\n      }\n    },\n    { \n      key: 'name', \n      text: 'Name (a-z)', \n      value: 'name', \n      onClick: () => {\n        props.sortItems('name')\n        setItemPlaceholder('Name (a-z)')\n      } \n    },\n    { \n      key: 'nameZ', \n      text: 'Name (z-a)', \n      value: 'nameZ', \n      onClick: () => {\n        props.sortItems('nameZ')\n        setItemPlaceholder('Name (z-a)')\n      } \n    },\n  ]\n\n  return (\n    <Form\n      // fluid\n      onSubmit={handleSubmit}\n    >\n      <Input\n        fluid\n        icon=\"plus\"\n        iconPosition=\"left\"\n        type=\"text\"\n        size=\"big\"\n        name=\"item\"\n        value={item}\n        placeholder=\"Add item...\"\n        onChange={handleChange}\n        action={\n          <Dropdown \n            style={{ width: 170 }} \n            button \n            basic \n            options={options} \n            placeholder={itemPlaceholder} \n          />\n        }\n      />\n    </Form>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.itemReducer.isLoading\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    addItem,\n    sortItems\n  })(ItemForm);","import {\n  GET_ITEMS_START,\n  GET_ITEMS_SUCCESS,\n  SORT_ITEMS_START,\n  SORT_ITEMS_SUCCESS,\n  SET_SELECTED,\n  ADD_ITEM,\n  DELETE_ITEM\n} from './actionTypes.js'\nimport data from '../../data/data'\n\n// do things here with the items\nexport const getItems = () => {\n  return dispatch => {\n    dispatch({ type: GET_ITEMS_START });\n    console.log('DATA', data)\n    dispatch({ type: GET_ITEMS_SUCCESS, payload: data });\n  }\n}\n\nexport const sortItems = (param) => {\n  return dispatch => {\n    dispatch({ type: SORT_ITEMS_START })\n    dispatch({ type: SORT_ITEMS_SUCCESS, payload: param })\n  }\n}\n\nexport const addItem = (item) => {\n  return dispatch => {\n    dispatch({ type: ADD_ITEM, payload: item });\n  }\n}\n\nexport const setSelected = (id) => {\n  return dispatch => {\n    dispatch({ type: SET_SELECTED, payload: id})\n  }\n}\n\nexport const deleteItem = (id) => {\n  return dispatch => {\n    dispatch({ type: DELETE_ITEM, payload: id})\n  }\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getItems, deleteItem, setSelected } from '../store/actions';\nimport { Container } from 'semantic-ui-react';\nimport ItemList from './ItemList'\nimport ItemForm from './ItemForm';\n\nconst ItemListContainer = (props) => {\n\tconst {items, isLoading, getItems, deleteItem, setSelected} = props\n\n\tuseEffect(() => {\n\t\tgetItems()\n\t\tconsole.log('useEffect')\n\t}, [isLoading])\n\n\treturn (\n\t\t<Container className=\"item-container\">\n\t\t\t<ItemForm />\n\t\t\t<ItemList \n\t\t\t\titems={items} \n\t\t\t\tdeleteItem={deleteItem} \n\t\t\t\tsetSelected={setSelected}\n\t\t\t/>\n\t\t</Container>\n\t)\n}\n\nconst mapStateToProps = state => {\n\tconst { items, isLoading } = state.itemReducer\n\treturn {\n\t\titems: items,\n\t\tisLoading: isLoading\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n\t{\n\t\tgetItems,\n\t\tdeleteItem,\n\t\tsetSelected\n\t})(ItemListContainer);","import React from 'react';\nimport './App.scss';\nimport ItemListContainer from './components/ItemListContainer'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ItemListContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store/store.js';\n\nimport './index.scss';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}